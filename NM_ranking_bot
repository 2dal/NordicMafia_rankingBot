import os
import selenium
from selenium import webdriver
from random import randint
import time
import threading


class NordicBot:

    def __init__(self, username, password):
        # If the chromedriver is not placed in the same folder as the code you need to change the path to the complete path of the cromedriver.
        # for an example self.chromeDrivePah = 'C:/Users/<USER>/Documents/chromedriver_win32/chromedriver.exe'
        self.chromeDrivePath = 'chromedriver.exe'
        self.user_name = username
        self.password = password
        os.environ["LANG"] = "en_US.UTF-8"
        self.driver = selenium.webdriver.Chrome(
            executable_path=self.chromeDrivePath)
        self.krim_url = 'https://www.nordicmafia.org/index.php?p=kriminalitet'
        self.bank_url = 'https://www.nordicmafia.org/index.php?p=bank'
        self.fight_url = 'https://www.nordicmafia.org/index.php?p=fightclub'
        self.biltyv_url = 'https://www.nordicmafia.org/index.php?p=gta'
        self.fengsel_url = 'https://www.nordicmafia.org/index.php?p=jail'
        self.utpressing_url = 'https://www.nordicmafia.org/index.php?p=blackmail'
        self.iFengsel = False
        self.bil_pause = 6 * 60  # 6 min
        self.krim_pause = 3 * 60  # 3 min
        self.fight_pause = 2 * 60  # 2 min
        self.utpressing_pause = 16 * 60  # 16 min

        # Open the website
        self.driver.get('https://www.nordicmafia.org')

        time.sleep(1)
        # Select the id box
        self.id_box = self.driver.find_element_by_name('username')
        # Equivalent Outcome!
        self.pass_box = self.driver.find_element_by_name('password')
        # Send id information
        self.id_box.send_keys(self.user_name)
        self.pass_box.send_keys(self.password)
        #
        time.sleep(.1)
        # # Find login button
        self.login_button = self.driver.find_element_by_name('login')
        # Click login
        self.login_button.click()

        self.nesteKrimTime = self.nesteUtprTime = self.nestebilTime = self.nesteFightTime = time.time()  # + 60 * 16
        input('Look for captcha and press enter')

    def banken(self):
        self.driver.get(self.bank_url)
        sett_inn_alt = self.driver.find_element_by_name('depositAll')
        sett_inn_alt.click()

    def sjekkNettbanken(self):
        try:
            lommebok = self.driver.find_element_by_id('money_hand')
        except selenium.common.exceptions.StaleElementReferenceException:
            # Dette er en skitte skitten kode. Hvis lommeboka har endret før den rekker å gi tallet, så venter
            # den et sekund og kaller seg selv
            time.sleep(1)
            return self.sjekkNettbanken()
        return int(lommebok.text.replace(',', ''))

    def hvisPengerIBanken(self):
        if not self.sjekkNettbanken() == 0:
            self.banken()

    def random_deyal(self):
        tid = randint(1, 100) / 10.
        time.sleep(tid)

    def kriminalitet(self):
        self.driver.get(self.krim_url)
        time.sleep(.4)
        krim_button = self.driver.find_element_by_id('rowid_table_select_krimaction' + str(randint(0, 4)))
        krim_button.click()
        newTime = time.time() + self.krim_pause
        return newTime

    def fightClub(self):
        self.driver.get(self.fight_url)
        time.sleep(1.2)
        fight_button = self.driver.find_element_by_id('rowid_table_select_fcworkout3')
        fight_button.click()
        newTime = time.time() + self.fight_pause
        return newTime

    def utpressing(self):
        self.driver.get(self.utpressing_url)
        tilfeldig_spiller = self.driver.find_element_by_id('sel_1')
        tilfeldig_spiller.click()
        utpress = self.driver.find_element_by_name('submitBlackmail')
        utpress.click()
        newTime = time.time() + self.utpressing_pause
        return newTime

    def biltyveri(self):
        self.driver.get(self.biltyv_url)
        bil_paa_gata = self.driver.find_element_by_id('rowid_table_select_gtaaction' + str(randint(0, 3)))
        bil_paa_gata.click()
        newTime = time.time() + self.bil_pause
        try:
            self.sellFirstCar()
        except (
                selenium.common.exceptions.ElementNotInteractableException,
                selenium.common.exceptions.NoSuchElementException):
            pass
        return newTime

    def sellFirstCar(self):
        self.driver.get(self.biltyv_url)
        firstCar = self.driver.find_element_by_xpath('//*[contains(@id, "carSelect")]')
        firstCar.click()
        selgValgte = self.driver.find_element_by_name('doSell')
        selgValgte.click()

    def check_fengsel(self):
        try:
            self.banken()
            return False
        except:
            return True

    def do_crime(self):
        while True:
            self.hvisPengerIBanken()
            try:
                if self.nesteFightTime < time.time():
                    self.nesteFightTime = self.fightClub()
                    print(self.user_name + ' har utført trening')
                elif self.nesteKrimTime < time.time():
                    self.nesteKrimTime += 30
                    self.nesteKrimTime = self.kriminalitet()
                    print(self.user_name + ' har utført kriminaliet')
                elif self.nestebilTime < time.time():
                    self.nestebilTime = self.biltyveri()
                    print(self.user_name + ' har utført biltyveri')
                elif self.nesteUtprTime < time.time():
                    self.nesteUtprTime += 60 * 1
                    self.nesteUtprTime = self.utpressing()
                    print(self.user_name + ' har utført utpressing')
                time_for_next_action = min(self.nestebilTime, self.nesteFightTime, self.nesteKrimTime,
                                           self.nesteUtprTime) - time.time()
                if time_for_next_action > 0:
                    time.sleep(time_for_next_action)
            except:
                print("exception for some reason")
                time.sleep(10)


if __name__ == '__main__':
    list_of_user_name = []
    list_of_password = []
    while 1:
        print("(if you don't want to add more accounts, press Enter) \n \n ")
        userName = (input("Write username then Enter: "))
        if not len(userName) > 1:
            break
        else:
            list_of_user_name.append(userName)
            list_of_password.append(input("Write password then Enter: "))

    thread_bot_list = []
    for i in range(len(list_of_user_name)):
        bot = NordicBot(list_of_user_name[i], list_of_password[i])
        thread = threading.Thread(target=bot.do_crime)
        thread_bot_list.append(thread)

    for i in range(len(thread_bot_list)):
        thread_bot_list[i].start()
        print("here")
